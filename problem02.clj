(ns projecteuler02)

(comment
  Even Fibonacci numbers
  Problem 2
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
)


(def memo (atom {}))

(defn fib [n]
  (cond
    (< n 4) n
    :else
    (let [cache (get @memo n)]
      (if-not (nil? cache)
       cache
       (let [result (+ (fib (- n 1)) (fib (- n 2)))]
         (swap! memo assoc n result)
         result
       )
      )
    )
  )
)

(fib 2)

(apply + (filter even? (take-while #(< % 4.0E6) (map fib (range)))))


;; ---- Using Memoize

(defn fibonacci [n]
  (if (< n 3) n
    (+ (fibonacci (- n 1)) (fibonacci (- n 2)))
  )
)


(def memo-fib (memoize fibonacci))

(apply + (filter even? (take-while #(< % 4.0E6) (map memo-fib (range)))))
